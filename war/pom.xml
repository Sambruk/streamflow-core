<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>se.streamsource.streamflow</groupId>
        <artifactId>streamflow</artifactId>
        <version>1.1-SNAPSHOT</version>
    </parent>

    <groupId>se.streamsource.streamflow</groupId>
    <artifactId>streamflow-war</artifactId>
    <version>1.1-SNAPSHOT</version>

    <packaging>war</packaging>
    <name>StreamFlow war</name>
    <description>StreamFlow WAR packaging</description>
    <properties>
        <deploy.dir>${glassfish.domain}/streamflow</deploy.dir>
    </properties>

    <build>
        <plugins>
            <!-- Resources -->
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.4.1</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <!-- here the phase you need -->
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/${project.build.finalName}/WEB-INF/classes
                            </outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}/../web/src/main/resources</directory>
                                    <filtering>true</filtering>
                                    <includes>
                                        <include>version.properties</include>
                                        <include>**/*.html</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- War -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>dependency-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <!--
                            Copy the webstart bundle in as a resource
                            before packaging starts.
                        -->
                        <phase>process-resources</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <artifactItems>
                        <artifactItem>
                            <groupId>se.streamsource.streamflow</groupId>
                            <artifactId>streamflow-webstart</artifactId>
                            <version>${project.version}</version>
                            <type>zip</type>
                        </artifactItem>
                    </artifactItems>
                    <outputDirectory>${project.build.directory}/${project.build.finalName}/webstart</outputDirectory>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <extensions>true</extensions>
                <configuration>
                    <supportedProjectTypes>
                        <supportedProjectType>war</supportedProjectType>
                        <supportedProjectType>bundle</supportedProjectType>
                        <supportedProjectType>jar</supportedProjectType>
                    </supportedProjectTypes>
                    <instructions>
                        <!-- Read all OSGi configuration info from this optional file -->
                        <_include>-osgi.bundle</_include>
                        <!-- By default, we don't export anything -->
                        <Bundle-ClassPath>WEB-INF/classes,WEB-INF/lib/webstart-jnlp-servlet-1.0-6.0-02_ea_b02.jar</Bundle-ClassPath>
                        <Import-Package>org.slf4j;version=0.0,org.osgi.framework,org.osgi.util.tracker,org.restlet,org.restlet.ext.servlet,javax.servlet,javax.servlet.http</Import-Package>
                        <Export-Package></Export-Package>
                        <Private-Package>*</Private-Package>
                        <Embed-Dependency>*;scope=compile|runtime</Embed-Dependency>
                    </instructions>
                </configuration>
                <executions>
                    <execution>
                        <id>bundle-manifest</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>manifest</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <!-- add bundle plugin generated manifest to the jar -->
                        <manifestFile>
                            ${project.build.outputDirectory}/META-INF/MANIFEST.MF
                        </manifestFile>
                    </archive>
                </configuration>
            </plugin>
            <plugin> <!-- Need to use this plugin to build war files -->
                <artifactId>maven-war-plugin</artifactId>
                <groupId>org.apache.maven.plugins</groupId>
                <!-- Use version 2.1-beta-1, as it supports the new property failOnMissingWebXml -->
                <version>2.1-beta-1</version>
                <configuration>
                    <archive>
                        <!-- add bundle plugin generated manifest to the war -->
                        <manifestFile>
                            ${project.build.outputDirectory}/META-INF/MANIFEST.MF
                        </manifestFile>
                        <!-- For some reason, adding Bundle-ClassPath in maven-bundle-plugin
                        confuses that plugin and it generates wrong Import-Package, etc.
                        So, we generate it here.
                        -->
                        <manifestEntries>
                            <Bundle-ClassPath>WEB-INF/classes/
                            </Bundle-ClassPath>
                        </manifestEntries>
                    </archive>
                    <!-- We don't have a web.xml -->
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.cargo</groupId>
                <artifactId>cargo-maven2-plugin</artifactId>
                <configuration>
                    <container>
                        <containerId>tomcat6x</containerId>
                        <type>remote</type>
                    </container>
                    <configuration>
                        <type>runtime</type>
                        <properties>
                            <cargo.tomcat.manager.url>${cargo.url}</cargo.tomcat.manager.url>
                            <cargo.remote.username>${cargo.username}</cargo.remote.username>
                            <cargo.remote.password>${cargo.password}</cargo.remote.password>
                        </properties>
                    </configuration>
                    <deployer>
                        <type>remote</type>
                        <deployables>
                            <deployable>
                                <groupId>se.streamsource.streamflow</groupId>
                                <artifactId>streamflow-war</artifactId>
                                <type>war</type>
                                <properties>
                                    <context>streamflow</context>
                                </properties>
                            </deployable>
                        </deployables>
                    </deployer>
                </configuration>
            </plugin>
            <!--
                        <plugin>
                            <groupId>org.codehaus.mojo</groupId>
                            <artifactId>wagon-maven-plugin</artifactId>
                            <executions>
                                <execution>
                                    <id>upload-war</id>
                                    <phase>deploy</phase>
                                    <goals>
                                        <goal>upload-single</goal>
                                    </goals>
                                    <configuration>
                                        <fromFile>target/${project.build.finalName}.war</fromFile>
                                        <serverId>deploy.streamflow</serverId>
                                        <url>scp://${deploy.server}/root</url>
                                        <toFile>streamflow.war</toFile>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
            -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <!--
                                <executions>
                                    <execution>
                                        <phase>deploy</phase>
                                        <goals>
                                            <goal>exec</goal>
                                        </goals>
                                    </execution>
                                </executions>
                -->
                <configuration>
                    <executable>ssh</executable>
                    <arguments>
                        <argument>-i</argument>
                        <argument>${ec2.privateKey}</argument>
                        <argument>root@${deploy.server}</argument>
                        <argument>sh deploy.sh</argument>
                    </arguments>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>streamflow-nightly</id>
            <activation>
                <property>
                    <name>!release</name>
                </property>
            </activation>
            <properties>
                <deploy.server>${deploy.nightly.server}</deploy.server>
                <cargo.url>http://${deploy.nightly.server}/manager</cargo.url>
                <cargo.username>${cargo.nightly.username}</cargo.username>
                <cargo.password>${cargo.nightly.password}</cargo.password>
            </properties>
        </profile>
        <profile>
            <id>streamflow-release</id>
            <activation>
                <property>
                    <name>release</name>
                </property>
            </activation>
            <properties>
                <deploy.server>${deploy.release.server}</deploy.server>
                <cargo.url>http://${deploy.release.server}/manager</cargo.url>
                <cargo.username>${cargo.release.username}</cargo.username>
                <cargo.password>${cargo.release.password}</cargo.password>
            </properties>
        </profile>
    </profiles>

    <dependencies>
        <dependency>
            <groupId>org.osgi</groupId>
            <artifactId>org.osgi.core</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.osgi</groupId>
            <artifactId>org.osgi.compendium</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.restlet.jee</groupId>
            <artifactId>org.restlet</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.restlet.jee</groupId>
            <artifactId>org.restlet.ext.servlet</artifactId>
            <version>${version.restlet}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Web -->
        <dependency>
            <groupId>org.codehaus.mojo.webstart</groupId>
            <artifactId>webstart-jnlp-servlet</artifactId>
            <version>1.0-6.0-02_ea_b02</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>2.4</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>
</project>
